rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Usuários - permite acesso apenas ao próprio usuário
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Eventos - leitura pública, escrita por administradores e organizadores
    match /events/{eventId} {
      allow read: if true;
      allow create: if request.auth != null && 
                  (request.resource.data.createdBy == request.auth.uid || 
                  getUserRole(request.auth.uid) in ['admin', 'organizer']);
      allow update, delete: if request.auth != null && 
                  (resource.data.createdBy == request.auth.uid || 
                  getUserRole(request.auth.uid) == 'admin');
    }
    
    // Tickets - acesso restrito
    match /tickets/{ticketId} {
      allow read: if request.auth != null && 
                (resource.data.userId == request.auth.uid || 
                resource.data.createdBy == request.auth.uid || 
                getUserRole(request.auth.uid) == 'admin');
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
                (resource.data.userId == request.auth.uid || 
                getUserRole(request.auth.uid) == 'admin');
    }
    
    // Favoritos - acesso apenas ao próprio usuário
    match /favorites/{favoriteId} {
      allow read, write: if request.auth != null && resource.data.userId == request.auth.uid;
    }
    
    // Função para obter o papel do usuário
    function getUserRole(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role;
    }
  }
}
